name: deploy-automatizacion
on:
  push:
    branches:
      - develop
      - staging
  pull_request:
    branches:
      - develop
      - staging
  workflow_dispatch:


env:
  AWS_PROFILE: default
  DOCKER_IMAGE: leasencloud
  DOCKER_TAG: 1.0.0-SNAPSHOT
  AWS_ACCESS_KEY_ID: default
  AWS_SECRET_ACCESS_KEY: default
  AWS_ECR: default
  AWS_REGION: eu-west-1
  
  
jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
     ## packages: write

    steps:
    - uses: actions/checkout@v3

    #- name: Set Path
    #  run: |
    #    ls -l
    #- name: Generate docker image
    #  run: | 
    #    docker build . -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}  
    #- name: Ver docker image
    #  run: | 
    #    docker images 
        
 
    - name: Configure AWS credentials main
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ECR: ${{ secrets.AWS_ECR_DEV }}
      run: |
        echo "Configure AWS credentials Main"
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
        echo "AWS_REGION=${AWS_REGION}" >> $GITHUB_ENV
        echo "AWS_ECR=${AWS_ECR}" >> $GITHUB_ENV
        
    - name: Configure AWS credentials Develop
      if: ${{ github.ref == 'refs/heads/develop' }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ECR: ${{ secrets.AWS_ECR_DEV }}
      run: |
        echo "Configure AWS credentials Develop"
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
        echo "AWS_REGION=${AWS_REGION}" >> $GITHUB_ENV
        echo "AWS_ECR=${AWS_ECR}" >> $GITHUB_ENV

    - name: Configure AWS credentials Staging
      if: ${{ github.ref == 'refs/heads/staging' }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STG }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ECR: ${{ secrets.AWS_ECR_STG }}
      run: |
        echo "Configure AWS credentials Staging"    
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
        echo "AWS_REGION=$AWS_REGION" >> $GITHUB_ENV
        echo "AWS_ECR=$AWS_ECR" >> $GITHUB_ENV       
        
        
    - name: install-awscli
      run: | 
        apt-get update && apt-get -y install awscli
        aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} 
        aws configure set default.region ${{ env.AWS_REGION }}
        
    #- name: Configure AWS credentials Develop
    #  uses: aws-actions/configure-aws-credentials@v1
    #  with:
    #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #    aws-region: ${{ secrets.AWS_REGION }}
        
    - name:  Ver credenciales AWS y ver comandos
      run: |
        cat $HOME/.aws/credentials
        cat $HOME/.aws/config
        echo " aws ecr get-login-password --region ${{ env.AWS_REGION }} --profile ${{ env.AWS_PROFILE }}"
        echo " docker login --username AWS --password-stdin ${{ env.AWS_ECR }}"
        echo " docker tag ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} ${{ env.AWS_ECR }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
        echo " docker push ${{ env.AWS_ECR}}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
    
    
    
    #- id: upload
    #  name: upload
    #  run: |
    #    aws ecr get-login-password \
    #      --region ${{ env.AWS_REGION }} \
    #      --profile ${{ env.AWS_PROFILE }} | \
    #      docker login \
    #      --username AWS \
    #      --password-stdin ${{ env.AWS_ECR }}
    #    docker tag ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} ${{ env.AWS_ECR }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
    #    docker push ${{ env.AWS_ECR }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
